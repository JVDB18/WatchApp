{"ast":null,"code":"import { TraktService } from '../trakt.service';\nimport { Router } from '@angular/router';\nimport { take, mergeMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../trakt.service\";\nimport * as i2 from \"@angular/router\";\nexport let DetailsResolveService = /*#__PURE__*/(() => {\n  class DetailsResolveService {\n    constructor(traktService, router) {\n      this.traktService = traktService;\n      this.router = router;\n    }\n    resolve(route, state) {\n      let slug = route.paramMap.get('slug');\n      let formatTrakt = route.paramMap.get('formattrakt');\n      return this.traktService.getDetailsById(formatTrakt, slug).pipe(take(1), mergeMap(details => {\n        if (details) {\n          return of(details);\n        } else {\n          console.log('error');\n        }\n      }));\n    }\n  }\n  DetailsResolveService.ɵfac = function DetailsResolveService_Factory(t) {\n    return new (t || DetailsResolveService)(i0.ɵɵinject(i1.TraktService), i0.ɵɵinject(i2.Router));\n  };\n  DetailsResolveService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DetailsResolveService,\n    factory: DetailsResolveService.ɵfac,\n    providedIn: 'root'\n  });\n  return DetailsResolveService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}