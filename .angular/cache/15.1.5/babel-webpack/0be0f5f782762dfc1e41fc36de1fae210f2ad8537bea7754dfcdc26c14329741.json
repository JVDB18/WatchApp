{"ast":null,"code":"import { TmdbService } from 'src/app/tmdb.service';\nimport { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/tmdb.service\";\nimport * as i2 from \"@angular/common\";\nfunction BackDropComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelement(1, \"img\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r0.backDropUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction BackDropComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 2);\n  }\n}\nfunction BackDropComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelement(1, \"img\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", ctx_r2.css);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r2.backDropUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction BackDropComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 2);\n  }\n}\nexport let BackDropComponent = /*#__PURE__*/(() => {\n  class BackDropComponent {\n    constructor(tmdbService) {\n      this.tmdbService = tmdbService;\n      this.subscription = new Subscription();\n      this.sized = innerHeight + 'px';\n      this.css = {\n        'height': innerHeight + 'px',\n        'padding-top': '20px'\n      };\n    }\n    ngOnInit() {\n      this.getBackDrop();\n    }\n    ngOnDestroy() {\n      this.subscription.unsubscribe();\n    }\n    ngOnChanges() {\n      //Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.\n      //Add '${implements OnChanges}' to the class.\n      this.getBackDrop();\n    }\n    getBackDrop() {\n      this.subscription.add(this.tmdbService.getConfig());\n      this.subscription.add(this.tmdbService.getBackdrop(this.format, this.id).subscribe(res => {\n        this.path = res;\n        this.rand = Math.floor(Math.random() * Math.floor(this.path.backdrops.length));\n        if (this.carousel === true) {\n          this.backDropUrl = `${this.tmdbService.config.images.base_url}original${this.path.backdrops[0].file_path}`;\n        } else {\n          this.backDropUrl = `${this.tmdbService.config.images.base_url}original${this.path.backdrops[this.rand].file_path}`;\n        }\n      }));\n    }\n  }\n  BackDropComponent.ɵfac = function BackDropComponent_Factory(t) {\n    return new (t || BackDropComponent)(i0.ɵɵdirectiveInject(i1.TmdbService));\n  };\n  BackDropComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BackDropComponent,\n    selectors: [[\"app-back-drop\"]],\n    inputs: {\n      id: \"id\",\n      format: \"format\",\n      carousel: \"carousel\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 4,\n    vars: 4,\n    consts: [[\"class\", \"backdropContainer\", 4, \"ngIf\"], [\"class\", \"backdropContainerCarousel\", 3, \"ngStyle\", 4, \"ngIf\"], [1, \"backdropContainer\"], [1, \"backdrop\", 3, \"src\"], [1, \"backdropContainerCarousel\", 3, \"ngStyle\"], [1, \"backdropCarousel\", 3, \"src\"]],\n    template: function BackDropComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, BackDropComponent_div_0_Template, 2, 1, \"div\", 0);\n        i0.ɵɵtemplate(1, BackDropComponent_div_1_Template, 1, 0, \"div\", 0);\n        i0.ɵɵtemplate(2, BackDropComponent_div_2_Template, 2, 2, \"div\", 1);\n        i0.ɵɵtemplate(3, BackDropComponent_div_3_Template, 1, 0, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.backDropUrl && !ctx.carousel);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.backDropUrl);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.backDropUrl && ctx.carousel);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.backDropUrl);\n      }\n    },\n    dependencies: [i2.NgIf, i2.NgStyle]\n  });\n  return BackDropComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}