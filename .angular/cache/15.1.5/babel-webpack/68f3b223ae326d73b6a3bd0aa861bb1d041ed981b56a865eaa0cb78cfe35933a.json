{"ast":null,"code":"import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let TraktService = /*#__PURE__*/(() => {\n  class TraktService {\n    constructor(http) {\n      this.http = http;\n    }\n    getList(page, limit, format, type) {\n      return this.http.get(`${environment.trakt.baseUrl}/${format}/${type}?page=${page}&limit=${limit}`, {\n        observe: 'response',\n        headers: this._getDefaultHeaders()\n      });\n    }\n    // retrieves seasons and episodes\n    //options is determined by the URL parameters needed by Trackt Api (ex: /seasons/:seasonNumber/episodes/:episodeNumber)\n    getSeason(id, options) {\n      return this.http.get(`${environment.trakt.baseUrl}/shows/${id}/${options}`, {\n        observe: 'response',\n        headers: this._getDefaultHeaders()\n      });\n    }\n    getWatched(path) {\n      return this.http.get(`${environment.trakt.baseUrl}/users/${localStorage.getItem('slug')}/watched/${path}`, {\n        headers: this._getDefaultHeaders()\n      });\n    }\n    getSync(path, type) {\n      return this.http.get(this._generateSyncUrl(path, type), {\n        headers: this._getUserHeaders()\n      });\n    }\n    getActors(format, slug, page) {\n      return this.http.get(`${environment.trakt.baseUrl}/${format}/${slug}/people?page=${page}&limit=5`, {\n        observe: 'response',\n        headers: this._getDefaultHeaders()\n      });\n    }\n    getActorById(id) {\n      return this.http.get(`https://api.trakt.tv/people/${id}`, {\n        observe: 'response',\n        headers: this._getDefaultHeaders()\n      });\n    }\n    addToList(path, body) {\n      return this.http.post(`https://api.trakt.tv/sync/${path}`, body, {\n        headers: this._getUserHeaders()\n      });\n    }\n    getWatchList(format) {\n      return this.http.get(this._generateUserUrl(`/${localStorage.getItem('slug')}/watchlist/${format}`), {\n        headers: this._getDefaultHeaders()\n      });\n    }\n    getDetailsById(format, slug) {\n      return this.http.get(`${environment.trakt.baseUrl}/${format}/${slug}?extended=full`, {\n        headers: this._getDefaultHeaders()\n      });\n    }\n    getRelatedById(format, slug) {\n      return this.http.get(`${environment.trakt.baseUrl}/${format}/${slug}/related`, {\n        headers: this._getDefaultHeaders()\n      });\n    }\n    search(term) {\n      if (!term.trim()) {\n        // if not search term, return empty array.\n        return of([]);\n      }\n      return this.http.get(`${environment.trakt.baseUrl}/search/movie,show,people?query=${term}`, {\n        headers: this._getDefaultHeaders()\n      }).pipe(tap(console.log));\n    }\n    _getUserHeaders() {\n      return new HttpHeaders({\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${localStorage.getItem('token')}`,\n        \"trakt-api-version\": \"2\",\n        \"trakt-api-key\": \"9bb50356fffe4192bf8b65138baf1928dbd0291a7cdf05e4cfb1e225b78807ad\"\n      });\n    }\n    _getDefaultHeaders() {\n      return new HttpHeaders({\n        'Content-Type': 'application/json',\n        'trakt-api-version': environment.trakt.version,\n        'trakt-api-key': environment.trakt.clientId\n      });\n    }\n    _generateSyncUrl(path, type) {\n      return `${environment.trakt.baseUrl}/sync/${path}/${type}?page=1&limit=50`;\n    }\n    _generateUserUrl(path) {\n      return `${environment.trakt.baseUrl}/users${path}`;\n    }\n  }\n  TraktService.ɵfac = function TraktService_Factory(t) {\n    return new (t || TraktService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  TraktService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TraktService,\n    factory: TraktService.ɵfac,\n    providedIn: 'root'\n  });\n  return TraktService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}