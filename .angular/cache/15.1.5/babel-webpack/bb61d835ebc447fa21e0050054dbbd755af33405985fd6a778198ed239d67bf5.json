{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let PaginaterService = /*#__PURE__*/(() => {\n  class PaginaterService {\n    constructor() {}\n    getPager(totalItems, currentPage, pageSize) {\n      let totalPages = Math.ceil(totalItems / pageSize);\n      if (currentPage < 1) {\n        currentPage = 1;\n      } else if (currentPage > totalPages) {\n        currentPage = totalPages;\n      }\n      let startPage, endPage;\n      if (totalPages <= 10) {\n        startPage = 1;\n        endPage = totalPages;\n      } else {\n        if (currentPage <= 6) {\n          startPage = 1;\n          endPage = 10;\n        } else if (currentPage + 4 >= totalPages) {\n          startPage = totalPages - 9;\n          endPage = totalPages;\n        } else {\n          startPage = currentPage - 5;\n          endPage = currentPage + 4;\n        }\n      }\n      let startIndex = (currentPage - 1) * pageSize;\n      let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n      let pages = Array.from(Array(endPage + 1 - startPage).keys()).map(i => startPage + 1);\n      return {\n        totalItems: totalItems,\n        currentPage: currentPage,\n        pageSize: pageSize,\n        totalPages: totalPages,\n        startPage: startPage,\n        endPage: endPage,\n        startIndex: startIndex,\n        endIndex: endIndex,\n        pages: pages\n      };\n    }\n  }\n  PaginaterService.ɵfac = function PaginaterService_Factory(t) {\n    return new (t || PaginaterService)();\n  };\n  PaginaterService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PaginaterService,\n    factory: PaginaterService.ɵfac,\n    providedIn: 'root'\n  });\n  return PaginaterService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}