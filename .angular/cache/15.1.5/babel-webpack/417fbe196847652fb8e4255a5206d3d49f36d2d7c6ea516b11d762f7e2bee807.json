{"ast":null,"code":"import { TmdbService } from 'src/app/tmdb.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Subscription, Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/tmdb.service\";\nimport * as i2 from \"@angular/platform-browser\";\nfunction TrailerComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"iframe\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r0.safeURL, i0.ɵɵsanitizeResourceUrl);\n  }\n}\nexport let TrailerComponent = /*#__PURE__*/(() => {\n  class TrailerComponent {\n    constructor(tmdbService, _sanitizer) {\n      this.tmdbService = tmdbService;\n      this._sanitizer = _sanitizer;\n      this.isData = new Subject();\n      this.subscription = new Subscription();\n    }\n    ngOnInit() {\n      this.getTrailer();\n      this.isData.subscribe(res => this.isTrailer = res);\n    }\n    ngOnChanges() {\n      //Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.\n      //Add '${implements OnChanges}' to the class.\n      this.getTrailer();\n    }\n    ngOnDestroy() {\n      this.subscription.unsubscribe();\n    }\n    getTrailer() {\n      this.subscription.add(this.tmdbService.getTrailer(this.format, this.id).subscribe(res => {\n        this.trailer = res;\n        console.log(this.trailer.results[0].key);\n        if (this.trailer.results.length !== 0) {\n          this.isData.next(true);\n          this.path = `https://www.youtube.com/embed/${this.trailer.results[0].key}`;\n          this.safeURL = this._sanitizer.bypassSecurityTrustResourceUrl(this.path);\n          console.log(this.safeURL);\n        } else {\n          this.isData.next(false);\n          console.log(this.isData);\n        }\n      }));\n    }\n  }\n  TrailerComponent.ɵfac = function TrailerComponent_Factory(t) {\n    return new (t || TrailerComponent)(i0.ɵɵdirectiveInject(i1.TmdbService), i0.ɵɵdirectiveInject(i2.DomSanitizer));\n  };\n  TrailerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TrailerComponent,\n    selectors: [[\"app-trailer\"]],\n    inputs: {\n      id: \"id\",\n      format: \"format\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [\"width\", \"560\", \"height\", \"315\", \"frameborder\", \"0\", \"allow\", \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\", \"allowfullscreen\", \"\", 3, \"src\"]],\n    template: function TrailerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TrailerComponent_div_0_Template, 2, 1, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isTrailer === true);\n      }\n    }\n  });\n  return TrailerComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}